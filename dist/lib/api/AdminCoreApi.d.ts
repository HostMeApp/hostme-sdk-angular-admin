import * as models from '../model/models';
import * as auth from './auth';
import { IApiConfig } from '../client/IApiConfig';
export declare class AdminCoreApi {
    protected $http: ng.IHttpService;
    protected config: IApiConfig;
    protected $httpParamSerializer: (d: any) => any;
    defaultHeaders: any;
    static $inject: string[];
    constructor($http: ng.IHttpService, config: IApiConfig, $httpParamSerializer?: (d: any) => any);
    authentications: {
        'default': auth.Authentication;
        'oauth2': auth.OAuth;
    };
    accessToken: string;
    private extendObj<T1, T2>(objA, objB);
    addNewRestaurant(value: models.CreateRestaurant, extraHttpRequestParams?: any): ng.IHttpPromise<models.WithAccessTokenContract1RestaurantContract>;
    addRestaurantZone(restaurantId: number, contract: models.ZoneCreate, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    addWaiter(restaurantId: number, contract: models.WaiterCreate, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    addWaiterToZone(restaurantId: number, zoneId: number, contract: models.WaiterAssign, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    assignWaiterToTable(restaurantId: number, tableNumber: string, contract: models.WaiterAssign, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    changePassword(model: models.ChangePassword, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    checkInvitationCode(invitationCode: string, restaurantId: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.InvitationInfo>;
    createInvitationCode(restaurantId: number, invitation: models.Invitation, extraHttpRequestParams?: any): ng.IHttpPromise<models.Token>;
    createNewAccountWithRestaurant(value: models.CreateAccountWithRestaurant, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    deleteInvitation(restaurantId: number, invitationCode: string, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    deleteRestaurant(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    deleteUser(restaurantId: number, userId: string, role: string, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    deleteWaiter(restaurantId: number, waiterId: number, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    deleteZone(restaurantId: number, zoneId: number, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    findRestaurantsByUserPhone(phone?: string, email?: string, extraHttpRequestParams?: any): ng.IHttpPromise<Array<models.Restaurant>>;
    findUserByPhoneAsync(phone?: string, email?: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.UserInfo>;
    getAllUserRestaurants(extraHttpRequestParams?: any): ng.IHttpPromise<Array<models.Restaurant>>;
    getCustomSettings(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<any>;
    getInvitations(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<Array<models.InvitationInfo>>;
    getRegistrationToken(restaurantId: number, tableNumber?: string, extraHttpRequestParams?: any): ng.IHttpPromise<models.Token>;
    getRestaurantById(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.Restaurant>;
    getRestaurantConfiguration(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.RestaurantConfiguration>;
    getRestaurantSettings(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<models.RestaurantSettings>;
    getRestaurantZones(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<Array<models.Zone>>;
    getUserProfile(extraHttpRequestParams?: any): ng.IHttpPromise<models.UserProfile>;
    getUsers(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<Array<models.RestaurantUserInfo>>;
    getWaiterZones(restaurantId: number, waiterId: number, extraHttpRequestParams?: any): ng.IHttpPromise<Array<models.Zone>>;
    getWaiters(restaurantId: number, extraHttpRequestParams?: any): ng.IHttpPromise<Array<models.Waiter>>;
    me(extraHttpRequestParams?: any): ng.IHttpPromise<models.UserInfo>;
    postProfileImage(image: string, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    profileImage(extraHttpRequestParams?: any): ng.IHttpPromise<string>;
    register(model: models.RegisterUser, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    reinvite(restaurantId: number, invitationCode: string, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    removeWaiterFromZone(restaurantId: number, zoneId: number, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    resetPassword(model: models.ResetPassword, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    setCustomSettings(restaurantId: number, settings: any, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    setRestaurantSettings(restaurantId: number, settings: models.RestaurantSettings, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    updateRestaurant(restaurantId: number, value: models.Restaurant, extraHttpRequestParams?: any): ng.IHttpPromise<models.Restaurant>;
    updateRestaurantZone(restaurantId: number, zoneId: number, contract: models.ZoneCreate, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    updateUserProfile(profile: models.UserProfile, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    updateWaiter(restaurantId: number, waiterId: number, contract: models.WaiterUpdate, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
    updateWaiterZone(restaurantId: number, waiterId: number, contract: models.ZoneCreate, extraHttpRequestParams?: any): ng.IHttpPromise<{}>;
}
