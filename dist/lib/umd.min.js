!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.listComponent=t()}}(function(){return require=function t(e,a,r){function i(s,o){if(!a[s]){if(!e[s]){var u="function"==typeof require&&require;if(!o&&u)return u(s,!0);if(n)return n(s,!0);var h=new Error("Cannot find module '"+s+"'");throw h.code="MODULE_NOT_FOUND",h}var d=a[s]={exports:{}};e[s][0].call(d.exports,function(t){var a=e[s][1][t];return i(a?a:t)},d,d.exports,t,e,a,r)}return a[s].exports}for(var n="function"==typeof require&&require,s=0;s<r.length;s++)i(r[s]);return i}({1:[function(t,e,a){"use strict";var r=t("./auth"),i=function(){function t(t,e,a){this.$http=t,this.config=e,this.$httpParamSerializer=a,this.defaultHeaders={},this.authentications={"default":new r.VoidAuth,oauth2:new r.OAuth}}return Object.defineProperty(t.prototype,"accessToken",{set:function(t){this.authentications.oauth2.accessToken=t},enumerable:!0,configurable:!0}),t.prototype.extendObj=function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);return t},t.prototype.addNewRestaurant=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter value when calling addNewRestaurant");var n={method:"POST",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.changePassword=function(t,e){var a=this.config.basePath+"/api/core/admin/account/password/change",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter model when calling changePassword");var n={method:"POST",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.checkInvitationCode=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/invitations/{invitationCode}".replace("{invitationCode}",String(t)).replace("{restaurantId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter invitationCode when calling checkInvitationCode");if(!e)throw new Error("Missing required parameter restaurantId when calling checkInvitationCode");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.createInvitationCode=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/invitations".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling createInvitationCode");if(!e)throw new Error("Missing required parameter invitation when calling createInvitationCode");var s={method:"POST",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.createNewAccountWithRestaurant=function(t,e){var a=this.config.basePath+"/api/core/admin/tenant/restaurants",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter value when calling createNewAccountWithRestaurant");var n={method:"POST",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.deleteInvitation=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/invitations/{invitationCode}".replace("{restaurantId}",String(t)).replace("{invitationCode}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling deleteInvitation");if(!e)throw new Error("Missing required parameter invitationCode when calling deleteInvitation");var s={method:"DELETE",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.deleteRestaurant=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling deleteRestaurant");var n={method:"DELETE",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.deleteUser=function(t,e,a,r){var i=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/users/{userId}".replace("{restaurantId}",String(t)).replace("{userId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling deleteUser");if(!e)throw new Error("Missing required parameter userId when calling deleteUser");if(!a)throw new Error("Missing required parameter role when calling deleteUser");void 0!==a&&(n.role=a);var o={method:"DELETE",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.findRestaurantsByUserPhone=function(t,e,a){var r=this.config.basePath+"/api/core/admin/tenant/restaurants/find",i={},n=this.extendObj({},this.defaultHeaders);void 0!==t&&(i.phone=t),void 0!==e&&(i.email=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.findUserByPhoneAsync=function(t,e,a){var r=this.config.basePath+"/api/core/admin/tenant/users/find",i={},n=this.extendObj({},this.defaultHeaders);void 0!==t&&(i.phone=t),void 0!==e&&(i.email=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getAllUserRestaurants=function(t){var e=this.config.basePath+"/api/core/admin/restaurants",a={},r=this.extendObj({},this.defaultHeaders),i={method:"GET",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications.oauth2.applyToRequest(i),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.getCustomSettings=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/settings/custom".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getCustomSettings");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getInvitations=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/invitations".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getInvitations");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getRegistrationToken=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/loyalty/token".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRegistrationToken");void 0!==e&&(i.tableNumber=e);var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getRestaurantById=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRestaurantById");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getRestaurantConfiguration=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/config".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRestaurantConfiguration");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getRestaurantSettings=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/settings".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRestaurantSettings");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getUserProfile=function(t){var e=this.config.basePath+"/api/core/admin/account/profile",a={},r=this.extendObj({},this.defaultHeaders),i={method:"GET",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications.oauth2.applyToRequest(i),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.getUsers=function(t,e){var a=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/users".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getUsers");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.me=function(t){var e=this.config.basePath+"/api/core/admin/account/me",a={},r=this.extendObj({},this.defaultHeaders),i={method:"GET",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications.oauth2.applyToRequest(i),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.postProfileImage=function(t,e){var a=this.config.basePath+"/api/core/admin/account/profile/image",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter image when calling postProfileImage");var n={method:"POST",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.profileImage=function(t){var e=this.config.basePath+"/api/core/admin/account/profile/image",a={},r=this.extendObj({},this.defaultHeaders),i={method:"GET",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications.oauth2.applyToRequest(i),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.register=function(t,e){var a=this.config.basePath+"/api/core/admin/account/register",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter model when calling register");var n={method:"POST",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.reinvite=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/invitations/{invitationCode}/reinvite".replace("{restaurantId}",String(t)).replace("{invitationCode}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling reinvite");if(!e)throw new Error("Missing required parameter invitationCode when calling reinvite");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.resetPassword=function(t,e){var a=this.config.basePath+"/api/core/admin/account/password/reset",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter model when calling resetPassword");var n={method:"POST",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.setCustomSettings=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/setting/custom".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling setCustomSettings");if(!e)throw new Error("Missing required parameter settings when calling setCustomSettings");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.setRestaurantSettings=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}/settings".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling setRestaurantSettings");if(!e)throw new Error("Missing required parameter settings when calling setRestaurantSettings");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.updateRestaurant=function(t,e,a){var r=this.config.basePath+"/api/core/admin/restaurants/{restaurantId}".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling updateRestaurant");if(!e)throw new Error("Missing required parameter value when calling updateRestaurant");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.updateUserProfile=function(t,e){var a=this.config.basePath+"/api/core/admin/account/profile",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter profile when calling updateUserProfile");var n={method:"PUT",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.$inject=["$http","IApiConfig","$httpParamSerializer"],t}();a.AdminCoreApi=i},{"./auth":9}],2:[function(t,e,a){"use strict";var r=t("./auth"),i=function(){function t(t,e,a){this.$http=t,this.config=e,this.$httpParamSerializer=a,this.defaultHeaders={},this.authentications={"default":new r.VoidAuth,oauth2:new r.OAuth}}return Object.defineProperty(t.prototype,"accessToken",{set:function(t){this.authentications.oauth2.accessToken=t},enumerable:!0,configurable:!0}),t.prototype.extendObj=function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);return t},t.prototype.addMember=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling addMember");if(!e)throw new Error("Missing required parameter contract when calling addMember");var s={method:"POST",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.addNewReward=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/rewards".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling addNewReward");if(!e)throw new Error("Missing required parameter reward when calling addNewReward");var s={method:"POST",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.approveRedeemRequest=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/redeems/{redeemId}/approve".replace("{restaurantId}",String(t)).replace("{redeemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling approveRedeemRequest");if(!e)throw new Error("Missing required parameter redeemId when calling approveRedeemRequest");var s={method:"POST",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.closeMembership=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/{memberId}/close".replace("{restaurantId}",String(t)).replace("{memberId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling closeMembership");if(!e)throw new Error("Missing required parameter memberId when calling closeMembership");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.deleteReward=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/rewards/{rewardId}".replace("{restaurantId}",String(t)).replace("{rewardId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling deleteReward");if(!e)throw new Error("Missing required parameter rewardId when calling deleteReward");var s={method:"DELETE",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.filter=function(t,e,a,r){var i=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/filter".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling filter");if(!e)throw new Error("Missing required parameter take when calling filter");if(!a)throw new Error("Missing required parameter token when calling filter");void 0!==e&&(n.take=e),void 0!==a&&(n.token=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.findMemberByPhoneNumber=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/find".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling findMemberByPhoneNumber");if(!e)throw new Error("Missing required parameter phoneNumber when calling findMemberByPhoneNumber");void 0!==e&&(i.phoneNumber=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getAlRewards=function(t,e){var a=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/rewards".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getAlRewards");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getAllMembers=function(t,e){var a=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getAllMembers");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getAllRedeemRequests=function(t,e){var a=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/redeems".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getAllRedeemRequests");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getDefaultLoyaltySettings=function(t,e){var a=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/settings/default".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getDefaultLoyaltySettings");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getLoyaltySettings=function(t,e){var a=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/settings".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getLoyaltySettings");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getMemberAvatar=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/{memberId}/avatar".replace("{restaurantId}",String(t)).replace("{memberId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getMemberAvatar");if(!e)throw new Error("Missing required parameter memberId when calling getMemberAvatar");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getMemberTransactions=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/{memberId}/transactions".replace("{restaurantId}",String(t)).replace("{memberId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getMemberTransactions");if(!e)throw new Error("Missing required parameter memberId when calling getMemberTransactions");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getMemberVisits=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/{memberId}/visits".replace("{restaurantId}",String(t)).replace("{memberId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getMemberVisits");if(!e)throw new Error("Missing required parameter memberId when calling getMemberVisits");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getMembershipInfo=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/{memberId}".replace("{restaurantId}",String(t)).replace("{memberId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getMembershipInfo");if(!e)throw new Error("Missing required parameter memberId when calling getMembershipInfo");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getRewardById=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/rewards/{rewardId}".replace("{restaurantId}",String(t)).replace("{rewardId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRewardById");if(!e)throw new Error("Missing required parameter rewardId when calling getRewardById");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.publishReward=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/rewards/{rewardId}/publish".replace("{restaurantId}",String(t)).replace("{rewardId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling publishReward");if(!e)throw new Error("Missing required parameter rewardId when calling publishReward");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.rejectRedeemRequest=function(t,e,a,r){var i=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/redeems/{redeemId}/reject".replace("{restaurantId}",String(t)).replace("{redeemId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling rejectRedeemRequest");if(!e)throw new Error("Missing required parameter redeemId when calling rejectRedeemRequest");if(!a)throw new Error("Missing required parameter reject when calling rejectRedeemRequest");var o={method:"POST",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.setLoyaltySettings=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/settings".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling setLoyaltySettings");if(!e)throw new Error("Missing required parameter settings when calling setLoyaltySettings");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.unpublishReward=function(t,e,a){var r=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/rewards/{rewardId}/unpublish".replace("{restaurantId}",String(t)).replace("{rewardId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling unpublishReward");if(!e)throw new Error("Missing required parameter rewardId when calling unpublishReward");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.updateMember=function(t,e,a,r){var i=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/members/{memberId}".replace("{restaurantId}",String(t)).replace("{memberId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling updateMember");if(!e)throw new Error("Missing required parameter memberId when calling updateMember");if(!a)throw new Error("Missing required parameter contract when calling updateMember");var o={method:"PUT",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.updateReward=function(t,e,a,r){var i=this.config.basePath+"/api/loyalty/admin/restaurants/{restaurantId}/rewards/{rewardId}".replace("{restaurantId}",String(t)).replace("{rewardId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling updateReward");if(!e)throw new Error("Missing required parameter rewardId when calling updateReward");if(!a)throw new Error("Missing required parameter reward when calling updateReward");var o={method:"PUT",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.$inject=["$http","IApiConfig","$httpParamSerializer"],t}();a.AdminLoyaltyApi=i},{"./auth":9}],3:[function(t,e,a){"use strict";var r=t("./auth"),i=function(){function t(t,e,a){this.$http=t,this.config=e,this.$httpParamSerializer=a,this.defaultHeaders={},this.authentications={"default":new r.VoidAuth,oauth2:new r.OAuth}}return Object.defineProperty(t.prototype,"accessToken",{set:function(t){this.authentications.oauth2.accessToken=t},enumerable:!0,configurable:!0}),t.prototype.extendObj=function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);return t},t.prototype.addNewReservation=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling addNewReservation");if(!e)throw new Error("Missing required parameter value when calling addNewReservation");var s={method:"POST",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.cancelReservation=function(t,e,a,r){var i=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/cancel".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling cancelReservation");if(!e)throw new Error("Missing required parameter reservationId when calling cancelReservation");
if(!a)throw new Error("Missing required parameter cancelReservationContract when calling cancelReservation");var o={method:"PUT",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.closeAsNoShow=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/noshow".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling closeAsNoShow");if(!e)throw new Error("Missing required parameter reservationId when calling closeAsNoShow");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.closeAsSeated=function(t,e,a,r){var i=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/seat".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling closeAsSeated");if(!e)throw new Error("Missing required parameter reservationId when calling closeAsSeated");void 0!==a&&(n.tableNumber=a);var o={method:"PUT",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getMessages=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/messages".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getMessages");if(!e)throw new Error("Missing required parameter reservationId when calling getMessages");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getReservationAvailability=function(t,e,a,r,i,n,s,o){var u=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/availability".replace("{restaurantId}",String(t)),h={},d=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getReservationAvailability");if(!e)throw new Error("Missing required parameter date when calling getReservationAvailability");if(!a)throw new Error("Missing required parameter partySize when calling getReservationAvailability");if(!r)throw new Error("Missing required parameter rangeInMinutes when calling getReservationAvailability");void 0!==e&&(h.date=e),void 0!==a&&(h.partySize=a),void 0!==r&&(h.rangeInMinutes=r),void 0!==i&&(h.tableTurnOver=i),void 0!==n&&(h.type=n),void 0!==s&&(h.areas=s);var p={method:"GET",url:u,json:!0,params:h,headers:d};return o&&(p=this.extendObj(p,o)),this.authentications.oauth2.applyToRequest(p),this.authentications["default"].applyToRequest(p),this.$http(p)},t.prototype.getReservationById=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getReservationById");if(!e)throw new Error("Missing required parameter reservationId when calling getReservationById");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getReservationSettings=function(t,e){var a=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/settings".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getReservationSettings");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getReservationsForPeriod=function(t,e,a,r){var i=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getReservationsForPeriod");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getRestaurantReservationsStatistic=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/stats".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRestaurantReservationsStatistic");void 0!==e&&(i.date=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getUnreadMessagesCount=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/messages/unread/count".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getUnreadMessagesCount");void 0!==e&&(i.from=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.placeOnWaitList=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/schedule".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling placeOnWaitList");if(!e)throw new Error("Missing required parameter reservationId when calling placeOnWaitList");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.reOpenReservation=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/reopen".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling reOpenReservation");if(!e)throw new Error("Missing required parameter reservationId when calling reOpenReservation");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.readAllMessage=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/messages/readall".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling readAllMessage");if(!e)throw new Error("Missing required parameter reservationId when calling readAllMessage");var s={method:"POST",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.sendGrid=function(t,e,a,r,i,n){var s=this.config.basePath+"/api/rsv/admin/email/yelp",o={},u=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter from when calling sendGrid");if(!e)throw new Error("Missing required parameter html when calling sendGrid");if(!a)throw new Error("Missing required parameter text when calling sendGrid");if(!r)throw new Error("Missing required parameter to when calling sendGrid");if(!i)throw new Error("Missing required parameter subject when calling sendGrid");void 0!==t&&(o.from=t),void 0!==e&&(o.html=e),void 0!==a&&(o.text=a),void 0!==r&&(o.to=r),void 0!==i&&(o.subject=i);var h={method:"POST",url:s,json:!0,params:o,headers:u};return n&&(h=this.extendObj(h,n)),this.authentications["default"].applyToRequest(h),this.$http(h)},t.prototype.sendMessage=function(t,e,a,r){var i=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}/messages".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling sendMessage");if(!e)throw new Error("Missing required parameter reservationId when calling sendMessage");if(!a)throw new Error("Missing required parameter createMessageContract when calling sendMessage");var o={method:"POST",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.setReservationSettings=function(t,e,a){var r=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/settings".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling setReservationSettings");if(!e)throw new Error("Missing required parameter settings when calling setReservationSettings");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.submitYelpReservation=function(t){var e=this.config.basePath+"/api/rsv/admin/email/yelp/inbound",a={},r=this.extendObj({},this.defaultHeaders),i={method:"POST",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.updateReservation=function(t,e,a,r){var i=this.config.basePath+"/api/rsv/admin/restaurants/{restaurantId}/reservations/{reservationId}".replace("{restaurantId}",String(t)).replace("{reservationId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling updateReservation");if(!e)throw new Error("Missing required parameter reservationId when calling updateReservation");if(!a)throw new Error("Missing required parameter value when calling updateReservation");var o={method:"PUT",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.$inject=["$http","IApiConfig","$httpParamSerializer"],t}();a.AdminReservationsApi=i},{"./auth":9}],4:[function(t,e,a){"use strict";var r=t("./auth"),i=function(){function t(t,e,a){this.$http=t,this.config=e,this.$httpParamSerializer=a,this.defaultHeaders={},this.authentications={"default":new r.VoidAuth,oauth2:new r.OAuth}}return Object.defineProperty(t.prototype,"accessToken",{set:function(t){this.authentications.oauth2.accessToken=t},enumerable:!0,configurable:!0}),t.prototype.extendObj=function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);return t},t.prototype.createNewFloor=function(t,e,a){var r=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/floors".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling createNewFloor");if(!e)throw new Error("Missing required parameter floor when calling createNewFloor");var s={method:"POST",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.createOrUpdateTableConfiguration=function(t,e,a){var r=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling createOrUpdateTableConfiguration");if(!e)throw new Error("Missing required parameter tables when calling createOrUpdateTableConfiguration");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.deleteFloor=function(t,e,a){var r=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/floors/{floorId}".replace("{restaurantId}",String(t)).replace("{floorId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling deleteFloor");if(!e)throw new Error("Missing required parameter floorId when calling deleteFloor");var s={method:"DELETE",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getAllTableCombinations=function(t,e){var a=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/combinations".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getAllTableCombinations");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getApprovedTableCombinations=function(t,e){var a=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/combinations/approved".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getApprovedTableCombinations");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getAvailableTables=function(t,e,a,r,i){var n=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/available".replace("{restaurantId}",String(t)),s={},o=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getAvailableTables");if(!e)throw new Error("Missing required parameter date when calling getAvailableTables");if(!a)throw new Error("Missing required parameter partySize when calling getAvailableTables");void 0!==e&&(s.date=e),void 0!==a&&(s.partySize=a),void 0!==r&&(s.areas=r);var u={method:"GET",url:n,json:!0,params:s,headers:o};return i&&(u=this.extendObj(u,i)),this.authentications.oauth2.applyToRequest(u),this.authentications["default"].applyToRequest(u),this.$http(u)},t.prototype.getFloorDetails=function(t,e,a){var r=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/floors/{floorId}".replace("{restaurantId}",String(t)).replace("{floorId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getFloorDetails");if(!e)throw new Error("Missing required parameter floorId when calling getFloorDetails");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getRestaurantFloors=function(t,e){var a=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/floors".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRestaurantFloors");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getTableMonitors=function(t,e,a,r){var i=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/monitors".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getTableMonitors");void 0!==e&&(n.tableTurnOver=e),void 0!==a&&(n.time=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getTableUsersList=function(t,e,a,r){var i=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/users".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getTableUsersList");void 0!==e&&(n.partySize=e),void 0!==a&&(n.time=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getTables=function(t,e){var a=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getTables");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.releaseTable=function(t,e,a){var r=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/{tableNumber}/release".replace("{restaurantId}",String(t)).replace("{tableNumber}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling releaseTable");if(!e)throw new Error("Missing required parameter tableNumber when calling releaseTable");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.seatPartyAtTable=function(t,e,a,r){var i=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/{tableNumber}/seat".replace("{restaurantId}",String(t)).replace("{tableNumber}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling seatPartyAtTable");if(!e)throw new Error("Missing required parameter tableNumber when calling seatPartyAtTable");if(!a)throw new Error("Missing required parameter partySize when calling seatPartyAtTable");void 0!==a&&(n.partySize=a);var o={method:"PUT",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.setApprovedTableCombinations=function(t,e,a){var r=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/tables/combinations/approved".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling setApprovedTableCombinations");if(!e)throw new Error("Missing required parameter combinations when calling setApprovedTableCombinations");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.updateFloor=function(t,e,a,r){var i=this.config.basePath+"/api/tm/admin/restaurants/{restaurantId}/floors/{floorId}".replace("{restaurantId}",String(t)).replace("{floorId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling updateFloor");if(!e)throw new Error("Missing required parameter floorId when calling updateFloor");if(!a)throw new Error("Missing required parameter floor when calling updateFloor");var o={method:"PUT",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.$inject=["$http","IApiConfig","$httpParamSerializer"],t}();a.AdminTableManagementApi=i},{"./auth":9}],5:[function(t,e,a){"use strict";var r=t("./auth"),i=function(){function t(t,e,a){this.$http=t,this.config=e,this.$httpParamSerializer=a,this.defaultHeaders={},this.authentications={"default":new r.VoidAuth,oauth2:new r.OAuth}}return Object.defineProperty(t.prototype,"accessToken",{set:function(t){this.authentications.oauth2.accessToken=t},enumerable:!0,configurable:!0}),t.prototype.extendObj=function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);return t},t.prototype.addConfirmedWaiting=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/confirmed".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling addConfirmedWaiting");if(!e)throw new Error("Missing required parameter conf when calling addConfirmedWaiting");var s={method:"POST",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.addNewWaiting=function(t,e){var a=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling addNewWaiting");var n={method:"POST",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.callWaitingParty=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/call".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling callWaitingParty");if(!e)throw new Error("Missing required parameter waitingItemId when calling callWaitingParty");void 0!==a&&(n.tableNumber=a);var o={method:"PUT",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.close=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/close".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling close");if(!e)throw new Error("Missing required parameter waitingItemId when calling close");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.closeAsCanceled=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/cancel".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling closeAsCanceled");if(!e)throw new Error("Missing required parameter waitingItemId when calling closeAsCanceled");if(!a)throw new Error("Missing required parameter origin when calling closeAsCanceled");void 0!==a&&(n.origin=a);var o={method:"PUT",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.closeAsSeated=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/sited".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling closeAsSeated");if(!e)throw new Error("Missing required parameter waitingItemId when calling closeAsSeated");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.confirm=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/confirm".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling confirm");if(!e)throw new Error("Missing required parameter waitingItemId when calling confirm");if(!a)throw new Error("Missing required parameter conf when calling confirm");var o={method:"PUT",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getAllWaitings=function(t,e,a,r,i){var n=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings".replace("{restaurantId}",String(t)),s={},o=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getAllWaitings");void 0!==e&&(s.queryOptions=e),void 0!==a&&(s.area=a),void 0!==r&&(s.groupSize=r);var u={method:"GET",url:n,json:!0,params:s,headers:o};return i&&(u=this.extendObj(u,i)),this.authentications.oauth2.applyToRequest(u),this.authentications["default"].applyToRequest(u),this.$http(u)},t.prototype.getMessages=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/messages".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getMessages");if(!e)throw new Error("Missing required parameter waitingItemId when calling getMessages");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getRestaurantWaitingsStatistic=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/stats".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getRestaurantWaitingsStatistic");void 0!==e&&(i.area=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getTodayStats=function(t,e){var a=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/stats".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getTodayStats");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getUnreadMessagesCount=function(t,e){var a=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/messages/unread/count".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getUnreadMessagesCount");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getWaitingById=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingById");if(!e)throw new Error("Missing required parameter waitingItemId when calling getWaitingById");var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getWaitingSettings=function(t,e){var a=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/settings".replace("{restaurantId}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingSettings");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getWaitingTimeByGroup=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings/groupby/partysize".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingTimeByGroup");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getWaitingTimeByHour=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings/groupby/hour".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingTimeByHour");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getWaitingTimeByLine=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings/waitings/groupby/line".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingTimeByLine");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getWaitingTimeByMeal=function(t,e,a,r){
var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings/groupby/mealtype".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingTimeByMeal");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getWaitingTimeByWeek=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings/groupby/week".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingTimeByWeek");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getWaitingTimeByWeekDay=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings/groupby/weekday".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingTimeByWeekDay");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getWaitingsForPeriod=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings".replace("{restaurantId}",String(t)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingsForPeriod");void 0!==e&&(n.from=e),void 0!==a&&(n.to=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.getWaitingsGroupBy=function(t,e,a,r,i){var n=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/analytics/waitings/groupby".replace("{restaurantId}",String(t)),s={},o=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling getWaitingsGroupBy");if(!e)throw new Error("Missing required parameter groupBy when calling getWaitingsGroupBy");void 0!==e&&(s.groupBy=e),void 0!==a&&(s.from=a),void 0!==r&&(s.to=r);var u={method:"GET",url:n,json:!0,params:s,headers:o};return i&&(u=this.extendObj(u,i)),this.authentications.oauth2.applyToRequest(u),this.authentications["default"].applyToRequest(u),this.$http(u)},t.prototype.incoming=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/smsclient/incoming",n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter from when calling incoming");if(!e)throw new Error("Missing required parameter to when calling incoming");if(!a)throw new Error("Missing required parameter body when calling incoming");void 0!==t&&(n.from=t),void 0!==e&&(n.to=e),void 0!==a&&(n.body=a);var o={method:"GET",url:i,json:!0,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications["default"].applyToRequest(o),this.$http(o)},t.prototype.markAllMessagesAsRead=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/messages/readall".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling markAllMessagesAsRead");if(!e)throw new Error("Missing required parameter waitingItemId when calling markAllMessagesAsRead");var s={method:"POST",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.putOnHold=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/putonhold".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling putOnHold");if(!e)throw new Error("Missing required parameter waitingItemId when calling putOnHold");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.reOpenWaiting=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/reopen".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling reOpenWaiting");if(!e)throw new Error("Missing required parameter waitingItemId when calling reOpenWaiting");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.sendMessage=function(t,e,a,r,i){var n=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/sendmessage".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),s={},o=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling sendMessage");if(!e)throw new Error("Missing required parameter waitingItemId when calling sendMessage");if(!a)throw new Error("Missing required parameter origin when calling sendMessage");if(!r)throw new Error("Missing required parameter createMessage when calling sendMessage");void 0!==a&&(s.origin=a);var u={method:"POST",url:n,json:!0,data:r,params:s,headers:o};return i&&(u=this.extendObj(u,i)),this.authentications.oauth2.applyToRequest(u),this.authentications["default"].applyToRequest(u),this.$http(u)},t.prototype.setWaitingSettings=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/settings".replace("{restaurantId}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling setWaitingSettings");if(!e)throw new Error("Missing required parameter settings when calling setWaitingSettings");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.takeOffHold=function(t,e,a){var r=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}/takeoffhold".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling takeOffHold");if(!e)throw new Error("Missing required parameter waitingItemId when calling takeOffHold");var s={method:"PUT",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.updateWaiting=function(t,e,a,r){var i=this.config.basePath+"/api/wm/admin/restaurant/{restaurantId}/waitings/{waitingItemId}".replace("{restaurantId}",String(t)).replace("{waitingItemId}",String(e)),n={},s=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter restaurantId when calling updateWaiting");if(!e)throw new Error("Missing required parameter waitingItemId when calling updateWaiting");if(!a)throw new Error("Missing required parameter item when calling updateWaiting");var o={method:"PUT",url:i,json:!0,data:a,params:n,headers:s};return r&&(o=this.extendObj(o,r)),this.authentications.oauth2.applyToRequest(o),this.authentications["default"].applyToRequest(o),this.$http(o)},t.$inject=["$http","IApiConfig","$httpParamSerializer"],t}();a.AdminWaitingManagementApi=i},{"./auth":9}],6:[function(t,e,a){"use strict";var r=t("./auth"),i=function(){function t(t,e,a){this.$http=t,this.config=e,this.$httpParamSerializer=a,this.defaultHeaders={},this.authentications={"default":new r.VoidAuth,oauth2:new r.OAuth}}return Object.defineProperty(t.prototype,"accessToken",{set:function(t){this.authentications.oauth2.accessToken=t},enumerable:!0,configurable:!0}),t.prototype.extendObj=function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);return t},t.prototype._delete=function(t,e){var a=this.config.basePath+"/api/webhooks/registrations/{id}".replace("{id}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter id when calling _delete");var n={method:"DELETE",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.deleteAll=function(t){var e=this.config.basePath+"/api/webhooks/registrations",a={},r=this.extendObj({},this.defaultHeaders),i={method:"DELETE",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications.oauth2.applyToRequest(i),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.get=function(t){var e=this.config.basePath+"/api/webhooks/filters",a={},r=this.extendObj({},this.defaultHeaders),i={method:"GET",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications.oauth2.applyToRequest(i),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.get_1=function(t){var e=this.config.basePath+"/api/webhooks/registrations",a={},r=this.extendObj({},this.defaultHeaders),i={method:"GET",url:e,json:!0,params:a,headers:r};return t&&(i=this.extendObj(i,t)),this.authentications.oauth2.applyToRequest(i),this.authentications["default"].applyToRequest(i),this.$http(i)},t.prototype.lookup=function(t,e){var a=this.config.basePath+"/api/webhooks/registrations/{id}".replace("{id}",String(t)),r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter id when calling lookup");var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.post=function(t,e){var a=this.config.basePath+"/api/webhooks/registrations",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter webHook when calling post");var n={method:"POST",url:a,json:!0,data:t,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications.oauth2.applyToRequest(n),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.put=function(t,e,a){var r=this.config.basePath+"/api/webhooks/registrations/{id}".replace("{id}",String(t)),i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter id when calling put");if(!e)throw new Error("Missing required parameter webHook when calling put");var s={method:"PUT",url:r,json:!0,data:e,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications.oauth2.applyToRequest(s),this.authentications["default"].applyToRequest(s),this.$http(s)},t.$inject=["$http","IApiConfig","$httpParamSerializer"],t}();a.AdminWebHookManagementApi=i},{"./auth":9}],7:[function(t,e,a){"use strict";var r=t("./auth"),i=function(){function t(t,e,a){this.$http=t,this.config=e,this.$httpParamSerializer=a,this.defaultHeaders={},this.authentications={"default":new r.VoidAuth,oauth2:new r.OAuth}}return Object.defineProperty(t.prototype,"accessToken",{set:function(t){this.authentications.oauth2.accessToken=t},enumerable:!0,configurable:!0}),t.prototype.extendObj=function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);return t},t.prototype.getExternalFacebookLogin=function(t,e){var a=this.config.basePath+"/authorization/externalFacebookLogin",r={},i=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter accessToken when calling getExternalFacebookLogin");void 0!==t&&(r.access_token=t);var n={method:"GET",url:a,json:!0,params:r,headers:i};return e&&(n=this.extendObj(n,e)),this.authentications["default"].applyToRequest(n),this.$http(n)},t.prototype.getExternalLogin=function(t,e,a){var r=this.config.basePath+"/authorization/externalLogin",i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter provider when calling getExternalLogin");void 0!==t&&(i.provider=t),void 0!==e&&(i.error=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications["default"].applyToRequest(s),this.$http(s)},t.prototype.getExternalLogins=function(t,e,a){var r=this.config.basePath+"/authorization/externalLogins",i={},n=this.extendObj({},this.defaultHeaders);if(!t)throw new Error("Missing required parameter returnUrl when calling getExternalLogins");void 0!==t&&(i.returnUrl=t),void 0!==e&&(i.generateState=e);var s={method:"GET",url:r,json:!0,params:i,headers:n};return a&&(s=this.extendObj(s,a)),this.authentications["default"].applyToRequest(s),this.$http(s)},t.$inject=["$http","IApiConfig","$httpParamSerializer"],t}();a.ExternalAuthenticationApi=i},{"./auth":9}],8:[function(t,e,a){"use strict";function r(t){for(var e in t)a.hasOwnProperty(e)||(a[e]=t[e])}r(t("./AdminCoreApi")),r(t("./AdminLoyaltyApi")),r(t("./AdminReservationsApi")),r(t("./AdminTableManagementApi")),r(t("./AdminWaitingManagementApi")),r(t("./AdminWebHookManagementApi")),r(t("./ExternalAuthenticationApi"))},{"./AdminCoreApi":1,"./AdminLoyaltyApi":2,"./AdminReservationsApi":3,"./AdminTableManagementApi":4,"./AdminWaitingManagementApi":5,"./AdminWebHookManagementApi":6,"./ExternalAuthenticationApi":7}],9:[function(t,e,a){"use strict";var r=function(){function t(){}return t.prototype.applyToRequest=function(t){t.auth={username:this.username,password:this.password}},t}();a.HttpBasicAuth=r;var i=function(){function t(t,e){this.location=t,this.paramName=e}return t.prototype.applyToRequest=function(t){"query"===this.location?t.qs[this.paramName]=this.apiKey:"header"===this.location&&(t.headers[this.paramName]=this.apiKey)},t}();a.ApiKeyAuth=i;var n=function(){function t(){}return t.prototype.applyToRequest=function(t){t.headers.Authorization="Bearer "+this.accessToken},t}();a.OAuth=n;var s=function(){function t(){}return t.prototype.applyToRequest=function(t){},t}();a.VoidAuth=s},{}],10:[function(t,e,a){"use strict";var r=function(){function t(t,e,a,r){this.$http=t,this.$q=e,this.config=a,this.$httpParamSerializer=r,this.defaultHeaders={}}return t.prototype.Authorize=function(t,e,a){var r=this.$q.defer();return this.getToken(e,a).then(function(e){t.authentications.oauth2.accessToken=e.access_token,r.resolve()},function(t){r.reject(t)}),r.promise},t.prototype.getToken=function(t,e){var a=this.$q.defer(),r=this.config.basePath+"/Token",i={"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},n={username:t,password:e,grant_type:"password"},s={method:"POST",url:r,json:!0,data:this.$httpParamSerializer(n),headers:i};return this.$http(s).then(function(t){a.resolve(t.data)},function(t){a.reject(t)}),a.promise},t.$inject=["$http","$q","IApiConfig","$httpParamSerializer"],t}();a.AuthorizationService=r},{}],11:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Available="Available"]="Available",t[t.AvailableForWait="AvailableForWait"]="AvailableForWait",t[t.NotEnoughCovers="NotEnoughCovers"]="NotEnoughCovers",t[t.Overbooked="Overbooked"]="Overbooked"}(t.AvailabilityLevelEnum||(t.AvailabilityLevelEnum={}));t.AvailabilityLevelEnum}(r=a.Availability||(a.Availability={}))},{}],12:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Cover="Cover"]="Cover",t[t.Table="Table"]="Table",t[t.Default="Default"]="Default"}(t.UnitTypeEnum||(t.UnitTypeEnum={}));t.UnitTypeEnum}(r=a.AvailabilityResponse||(a.AvailabilityResponse={}))},{}],13:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Standard="Standard"]="Standard",t[t.Hybrid="Hybrid"]="Hybrid"}(t.TypeEnum||(t.TypeEnum={}));t.TypeEnum}(r=a.CreateReservation||(a.CreateReservation={}))},{}],14:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.None="None"]="None",t[t.TypeDefinition="TypeDefinition"]="TypeDefinition",t[t.Function="Function"]="Function",t[t.ValueTerm="ValueTerm"]="ValueTerm",t[t.EntityContainer="EntityContainer"]="EntityContainer"}(t.SchemaElementKindEnum||(t.SchemaElementKindEnum={}));t.SchemaElementKindEnum}(r=a.IEdmSchemaElement||(a.IEdmSchemaElement={}))},{}],15:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.None="None"]="None",t[t.Type="Type"]="Type",t[t.Value="Value"]="Value"}(t.TermKindEnum||(t.TermKindEnum={}));t.TermKindEnum;!function(t){t[t.None="None"]="None",t[t.TypeDefinition="TypeDefinition"]="TypeDefinition",t[t.Function="Function"]="Function",t[t.ValueTerm="ValueTerm"]="ValueTerm",t[t.EntityContainer="EntityContainer"]="EntityContainer"}(t.SchemaElementKindEnum||(t.SchemaElementKindEnum={}));t.SchemaElementKindEnum}(r=a.IEdmTerm||(a.IEdmTerm={}))},{}],16:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.None="None"]="None",t[t.Primitive="Primitive"]="Primitive",t[t.Entity="Entity"]="Entity",t[t.Complex="Complex"]="Complex",t[t.Row="Row"]="Row",t[t.Collection="Collection"]="Collection",t[t.EntityReference="EntityReference"]="EntityReference",t[t.Enum="Enum"]="Enum"}(t.TypeKindEnum||(t.TypeKindEnum={}));t.TypeKindEnum}(r=a.IEdmType||(a.IEdmType={}))},{}],17:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Ascending="Ascending"]="Ascending",t[t.Descending="Descending"]="Descending"}(t.DirectionEnum||(t.DirectionEnum={}));t.DirectionEnum}(r=a.OrderByClause||(a.OrderByClause={}))},{}],18:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Submited="Submited"]="Submited",t[t.Approved="Approved"]="Approved",t[t.Rejected="Rejected"]="Rejected"}(t.StatusEnum||(t.StatusEnum={}));t.StatusEnum}(r=a.RedeemRequest||(a.RedeemRequest={}))},{}],19:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Submited="Submited"]="Submited",t[t.Approved="Approved"]="Approved",t[t.Rejected="Rejected"]="Rejected"}(t.StatusEnum||(t.StatusEnum={}));t.StatusEnum}(r=a.RedeemRequestInfo||(a.RedeemRequestInfo={}))},{}],20:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Standard="Standard"]="Standard",t[t.Hybrid="Hybrid"]="Hybrid"}(t.TypeEnum||(t.TypeEnum={}));t.TypeEnum}(r=a.Reservation||(a.Reservation={}))},{}],21:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Cover="Cover"]="Cover",t[t.Table="Table"]="Table",t[t.Default="Default"]="Default"}(t.AvailabilityMethodEnum||(t.AvailabilityMethodEnum={}));t.AvailabilityMethodEnum}(r=a.ReservationSettings||(a.ReservationSettings={}))},{}],22:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Published="Published"]="Published",t[t.Unpublished="Unpublished"]="Unpublished"}(t.StatusEnum||(t.StatusEnum={}));t.StatusEnum}(r=a.Reward||(a.Reward={}))},{}],23:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Discount="Discount"]="Discount",t[t.FreeMeal="FreeMeal"]="FreeMeal",t[t.MoneyOff="MoneyOff"]="MoneyOff"}(t.TypeEnum||(t.TypeEnum={}));t.TypeEnum}(r=a.RewardValue||(a.RewardValue={}))},{}],24:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.None="None"]="None",t[t.Constant="Constant"]="Constant",t[t.Convert="Convert"]="Convert",t[t.NonentityRangeVariableReference="NonentityRangeVariableReference"]="NonentityRangeVariableReference",t[t.BinaryOperator="BinaryOperator"]="BinaryOperator",t[t.UnaryOperator="UnaryOperator"]="UnaryOperator",t[t.SingleValuePropertyAccess="SingleValuePropertyAccess"]="SingleValuePropertyAccess",t[t.CollectionPropertyAccess="CollectionPropertyAccess"]="CollectionPropertyAccess",t[t.SingleValueFunctionCall="SingleValueFunctionCall"]="SingleValueFunctionCall",t[t.Any="Any"]="Any",t[t.CollectionNavigationNode="CollectionNavigationNode"]="CollectionNavigationNode",t[t.SingleNavigationNode="SingleNavigationNode"]="SingleNavigationNode",t[t.SingleValueOpenPropertyAccess="SingleValueOpenPropertyAccess"]="SingleValueOpenPropertyAccess",t[t.SingleEntityCast="SingleEntityCast"]="SingleEntityCast",t[t.All="All"]="All",t[t.EntityCollectionCast="EntityCollectionCast"]="EntityCollectionCast",t[t.EntityRangeVariableReference="EntityRangeVariableReference"]="EntityRangeVariableReference",t[t.SingleEntityFunctionCall="SingleEntityFunctionCall"]="SingleEntityFunctionCall",t[t.CollectionFunctionCall="CollectionFunctionCall"]="CollectionFunctionCall",t[t.EntityCollectionFunctionCall="EntityCollectionFunctionCall"]="EntityCollectionFunctionCall",t[t.NamedFunctionParameter="NamedFunctionParameter"]="NamedFunctionParameter"}(t.KindEnum||(t.KindEnum={}));t.KindEnum}(r=a.SingleValueNode||(a.SingleValueNode={}))},{}],25:[function(t,e,a){"use strict";var r;!function(t){!function(t){t[t.Available="Available"]="Available",t[t.Busy="Busy"]="Busy",t[t.Assigned="Assigned"]="Assigned",t[t.Reserved="Reserved"]="Reserved"}(t.StatusEnum||(t.StatusEnum={}));t.StatusEnum}(r=a.TableMonitor||(a.TableMonitor={}))},{}],26:[function(t,e,a){"use strict";function r(t){for(var e in t)a.hasOwnProperty(e)||(a[e]=t[e])}r(t("./Availability")),r(t("./AvailabilityResponse")),r(t("./CreateReservation")),r(t("./IEdmSchemaElement")),r(t("./IEdmTerm")),r(t("./IEdmType")),r(t("./OrderByClause")),r(t("./RedeemRequest")),r(t("./RedeemRequestInfo")),r(t("./Reservation")),r(t("./ReservationSettings")),r(t("./Reward")),r(t("./RewardValue")),r(t("./SingleValueNode")),r(t("./TableMonitor"))},{"./Availability":11,"./AvailabilityResponse":12,"./CreateReservation":13,"./IEdmSchemaElement":14,"./IEdmTerm":15,"./IEdmType":16,"./OrderByClause":17,"./RedeemRequest":18,"./RedeemRequestInfo":19,"./Reservation":20,"./ReservationSettings":21,"./Reward":22,"./RewardValue":23,"./SingleValueNode":24,"./TableMonitor":25}],"hostme-sdk-angular-admin":[function(t,e,a){"use strict";function r(t){for(var e in t)a.hasOwnProperty(e)||(a[e]=t[e])}r(t("./api/api")),r(t("./model/models"));var i=t("./client/AuthorizationService");a.AuthorizationService=i.AuthorizationService},{"./api/api":8,"./client/AuthorizationService":10,"./model/models":26}]},{},[]),require("hostme-sdk-angular-admin")});